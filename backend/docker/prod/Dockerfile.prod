###########
# BUILDER #
###########

# pull official base image
FROM python:3.8 as python-base

    # python
ENV PYTHONUNBUFFERED=1 \
    # prevents python creating .pyc files
    PYTHONDONTWRITEBYTECODE=1 \
    \
    # poetry
    # https://python-poetry.org/docs/configuration/#using-environment-variables
    POETRY_VERSION=1.0.5 \
    # make poetry install to this location
    POETRY_HOME="/opt/poetry" \
    # make poetry create the virtual environment in the project's root
    # it gets named `.venv`
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    # do not ask any interactive question
    POETRY_NO_INTERACTION=1

#########
# FINAL #
#########
# make none-root user group, prevent hacker

FROM python-base as builder-base
RUN apt-get update

RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | POETRY_HOME=/opt/poetry python && \
    cd /usr/local/bin && \
    ln -s /opt/poetry/bin/poetry && \
    poetry config virtualenvs.create false

# install dependencies
WORKDIR /opt/wedding_house_project/backend
COPY pyproject.toml poetry.lock* /

# quicker install as runtime deps are already installed
RUN poetry install --no-root --no-dev

# docker - copy all file
COPY . /opt/wedding_house_project/backend

# will become mountpoint of our code
WORKDIR /opt/wedding_house_project/backend

EXPOSE 8000
ENTRYPOINT ["/opt/wedding_house_project/backend/docker/prod/entrypoint.prod.sh"]